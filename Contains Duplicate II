Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Example 1:

Input: nums = [1,2,3,1]
Output: true
Explanation:
The element 1 occurs at the indices 0 and 3.

Example 2:
Input: nums = [1,2,3,4]
Output: false
Explanation:
All elements are distinct.

Example 3:
Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true

#include <vector>
#include <unordered_map>

using namespace std;

bool containsNearbyDuplicate(vector<int>& nums, int k) {
    unordered_map<int, int> indexMap;  // Stores the last index of each number

    for (int i = 0; i < nums.size(); i++) {
        if (indexMap.find(nums[i]) != indexMap.end() && (i - indexMap[nums[i]]) <= k) {
            return true;  // Found a duplicate within range k
        }
        indexMap[nums[i]] = i;  // Update last index of nums[i]
    }
    
    return false;  // No valid duplicates found
}
